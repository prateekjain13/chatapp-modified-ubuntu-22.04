trigger:
- main

pool:
  name: SelfHostedBackend  # your self-hosted agent pool name

variables:
  SSH_KEY_PATH: '/home/azureuser/.ssh/backend_key.pem'  # Path to your private SSH key on build agent
  BACKEND_HOST: '20.115.90.142'                         # Your VM public IP
  APP_PATH: '/chatapp'                                  # Backend app path on VM
  SERVICE_NAME: 'chatappdaemon.service'                 # Systemd service name

stages:
- stage: Deploy
  jobs:
  - job: DeployJob
    pool:
      name: SelfHostedBackend  # Self-hosted agent pool

    steps:

    - checkout: self
      clean: true

    - script: |
        echo "Copying code to backend server..."
        scp -i $(SSH_KEY_PATH) -o StrictHostKeyChecking=no -r * azureuser@$(BACKEND_HOST):$(APP_PATH)/
      displayName: 'Copy code to backend server'

    - script: |
        echo "Installing Python dependencies (incl. dotenv)..."
        ssh -i $(SSH_KEY_PATH) -o StrictHostKeyChecking=no azureuser@$(BACKEND_HOST) << EOF
          cd $(APP_PATH)
          source venv/bin/activate
          pip install -r requirements.txt
          pip install python-dotenv
        EOF
      displayName: 'Install Python dependencies'

    - script: |
        echo "Running makemigrations..."
        ssh -i $(SSH_KEY_PATH) -o StrictHostKeyChecking=no azureuser@$(BACKEND_HOST) << EOF
          cd $(APP_PATH)
          source venv/bin/activate
          cd fundoo
          python3 manage.py makemigrations
        EOF
      displayName: 'Run makemigrations'

    - script: |
        echo "Applying migrations..."
        ssh -i $(SSH_KEY_PATH) -o StrictHostKeyChecking=no azureuser@$(BACKEND_HOST) << EOF
          cd $(APP_PATH)
          source venv/bin/activate
          cd fundoo
          python3 manage.py migrate
        EOF
      displayName: 'Apply migrations'

    - script: |
        echo "Restarting service $(SERVICE_NAME)..."
        ssh -i $(SSH_KEY_PATH) -o StrictHostKeyChecking=no azureuser@$(BACKEND_HOST) << EOF
          cd $(APP_PATH)
          source venv/bin/activate
          sudo systemctl restart $(SERVICE_NAME)
        EOF
      displayName: 'Restart service'
